@* Page for creating transactions for both producers and consumers, do they need to be separate pages? *@
@model Copiosis_Application.Models.NewTransactionModel

<div class="row">
    <div class="col-lg-6 col-lg-offset-3 col-md-6 col-md-offset-3 col-xs-6 col-xs-offset-3">
        <h2 id="add-item-title" class="text-center">Add a Transaction</h2>
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()
            @Html.Partial("ValidationSummary", ViewData.ModelState)
            
            @*If user is using producer form*@
            if (Model.Producer == true)
            {
            <div class="row">
                <div class="form-group">
                    <div class="col-lg-3 col-md-3 col-xs-12">
                        @Html.LabelFor(m => m.Consumer, new { @class = "control-label transaction-label" })
                    </div>
                    <div class="col-lg-9 col-md-9 col-xs-12">
                        @Html.DropDownListFor(m => m.Consumer, new SelectList(Model.Consumers), new { @id = "class-dropdown", @class = "select-box", @placeholder = "Select the Consumer's Name" })
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="form-group">
                    <div class="col-lg-3 col-md-3 col-xs-12">
                        @Html.LabelFor(m => m.ProductProvided, new { @class = "control-label transaction-label" })
                    </div>
                    <div class="col-lg-9 col-md-9 col-xs-12">
                        @Html.DropDownListFor(m => m.ProductProvided, new SelectList(Model.Products), new { @id = "class-dropdown", @class = "select-box", @placeholder = "Select the Product you provided" })
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="form-group">
                    <div class="col-lg-3 col-md-3 col-xs-12">
                        <label for="notesInput" class="control-label transaction-label">Notes:</label>
                        @*@Html.LabelFor(m => m.Notes, new { @class = "control-label transaction-label" })*@
                    </div>
                    <div class="col-lg-9 col-md-9 col-xs-12">
                        <textarea id="notesInput" rows="4" cols="40" name="Notes" class="form-control"></textarea>
                        @* Use the placeholder for now, so that the application still compiles
                            @Html.LabelFor(m => m.Notes, new { @class = "sr-only" })
                            @Html.TextBoxFor(m => m.Notes, new { @class = "form-control", @placeholder = "Notes or Comments" })
                            @Html.ValidationMessageFor(m => m.Notes)
                        *@
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="form-group">
                    <div class="col-lg-12 col-md-12 col-xs-12" style="text-align:center">
                        <input type="submit" value="Submit" />
                    </div>
                </div>
            </div>
            }
            @*If user is not using producer form*@
            else
            {
                
            }
        }
    </div>
</div>