@model Copiosis_Application.Models.AddItemModel

<div class="col-lg-6 col-lg-offset-3 col-md-6 col-md-offset-3 col-xs-6 col-xs-offset-3">
    @if (Model.Name != "" && Model.Name != null && Model.Name != string.Empty)
    {
        <h2 id="add-item-title" class="text-center">Edit An Item</h2>
    }
    else
    {
        <h2 id="add-item-title" class="text-center">Create An Item</h2>
    }


    @using (Html.BeginForm(new { @class = "form-horizontal"} ))
    {
        @Html.AntiForgeryToken()
        @*Handle other error cases that are caught after the POST request*@
        if (ViewData.ModelState.IsValid == false)
        {
            <div id="errorBanner" class="validation-summary-errors panel panel-danger"
                    data-valmsg-summary="true">
                <div class="panel-heading">
                    @if (ViewData.ModelState.Count() == 1)
                    {
                        <center><strong>Please correct the following field:</strong></center>
                    }
                    else
                    {
                        <center><strong>Please correct the following fields:</strong></center>
                    }
                </div>
            </div><br />
        }
            <div class="form-group">
                <div class="input-group">
                    <span class="custom-q-mark glyphicon glyphicon-question-sign glyphicon-align-left input-group-addon" title='Please assign a class to your item. If you are uncertain which class to select, leave at “Default”'></span>
                    @Html.LabelFor(m => m.ItemClass, new { @class = "col-sm-3 control-label a-label" })@*removed class add-item-lable*@
                    <div class="col-sm-9">@*removed class col-lg-9, col-md-9, col-xs12*@
                        @Html.DropDownListFor(m => m.ItemClass, new SelectList(Model.ItemClassTemplates.Keys), new { @id = "class-dropdown", @class = "form-control", @placeholder = "Class" })@*class = removed select-box*@
                    </div>
                </div>
            </div>

            <div class="form-group">
                <div class="input-group">
                    <span class="custom-q-mark glyphicon glyphicon-align-left glyphicon-question-sign input-group-addon" title='Please select whether your item is a “Product” or a “Service"'></span>
                    @Html.LabelFor(m => m.ItemType, new { @class = "col-sm-3 control-label a-label" })
                    <div class="col-sm-9">
                        <div class="col-sm-3">
                        <div class="radio-inline">
                            @Html.RadioButtonFor(m => m.ItemType, "Product", new { @id = "product", @class = "in-line radio-button" })
                            @Html.Label("product")
                        </div>
                        </div>
                        <div class="col-sm-3 col-sm-offset-3">
                        <div class="radio-inline">
                            @Html.RadioButtonFor(m => m.ItemType, "Service", new { @id = "service", @class="in-line radio-button" })
                            @Html.Label("service")
                        </div>
                        </div>
                        <div>@Html.ValidationMessageFor(m => m.ItemType)</div>
                    </div>
                </div>
            </div>
        
            <div class="form-group">
                <div class="input-group">
                    <span class="custom-q-mark glyphicon glyphicon-align-left glyphicon-question-sign input-group-addon" title="Please assign a name to your item"></span>
                    @Html.LabelFor(m => m.Name, new { @class = "col-sm-3 control-label a-label" })
                    <div class="col-sm-9">
                        @Html.TextBoxFor(m => m.Name, new { @class = "form-control", @placeholder = "Item Name" })
                        @Html.ValidationMessageFor(m => m.Name)
                    </div>
                </div>
            </div>

            <div class="form-group">
                <div class="input-group">
                    <span class="custom-q-mark glyphicon glyphicon-align-left glyphicon-question-sign input-group-addon" title='Please provide an in-depth description of your item. Remember to include the “per unit” description. If you offer a dozen eggs, for example, specify that you’re offering “one dozen” eggs as opposed to “one egg"'></span>
                    @Html.LabelFor(m => m.Description, new { @class = "col-sm-3 control-label a-label" })
                    <div class="col-sm-9">
                        @Html.TextBoxFor(m => m.Description, new { @class = "form-control", @placeholder = "Item Description", @style = "min-height:30px" })
                        @Html.ValidationMessageFor(m => m.Description)
                    </div>
                </div>
            </div>

            <div class="form-group">
                <div class="input-group">
                    <span class="custom-q-mark glyphicon glyphicon-align-left glyphicon-question-sign input-group-addon" title='Please indicate how many NBR are needed for a consumer to own your product or service. NBR should be whole numbers (ex: 1, 5, 15, 100)'></span>
                    @Html.LabelFor(m => m.Gateway, new { @class = "col-sm-3 control-label a-label" })
                    <div class="col-sm-9">
                        @Html.TextBoxFor(m => m.Gateway, new { @class = "form-control", @placeholder = "Suggested Gateway", @id = "suggested-gateway" })
                        @Html.ValidationMessageFor(m => m.Gateway)
                    </div>
                </div>
            </div>
        
            <div class="form-group text-center">
                <input type="submit" value="Submit" />
                <button type="button" onclick="confirmBack()">Cancel</button>
            </div>
       
    }
</div>