@model Copiosis_Application.Models.AddItemModel

<div class="col-lg-6 col-lg-offset-3 col-md-6 col-md-offset-3 col-xs-6 col-xs-offset-3">
    @if (Model.Name != "" && Model.Name != null && Model.Name != string.Empty)
    {
        <h2 id="add-item-title" class="text-center">Edit an Item</h2>
    }
    else
    {
        <h2 id="add-item-title" class="text-center">Create an Item</h2>
    }


    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        @*Handle other error cases that are caught after the POST request*@
        if (Html.ViewData.ModelState.IsValid == false)
        {
            <div id="errorBanner" class="validation-summary-errors panel panel-danger"
                    data-valmsg-summary="true">
                <div class="panel-heading">
                    @if (Html.ViewData.ModelState.Count() == 1)
                    {
                        <center><strong>Please correct the following field:</strong></center>
                    }
                    else
                    {
                        <center><strong>Please correct the following fields:</strong></center>
                    }
                </div>
            </div><br />
        }
            <div class="form-group">
                <div class="input-group">
                    @Html.LabelFor(m => m.ItemClass, new { @class = "col-sm-3 control-label a-label" })@*removed class add-item-lable*@
                    <div class="col-sm-9 col-xs-9">@*removed class col-lg-9, col-md-9, col-xs12*@
                        @Html.DropDownListFor(m => m.ItemClass, new SelectList(Model.ItemClassTemplates.Keys), new { @id = "class-dropdown", @class = "form-control select-box", @placeholder = "Class", @data_toggle = "tooltip", @data_original_title = "Please assign a class to your item. If you are uncertain which class to select, leave at “Default”" })@*class = removed select-box*@
                    </div>
                </div>
            </div>

            <div class="form-group">
                <div class="input-group">
                    @Html.LabelFor(m => m.ItemType, new { @class = "col-sm-3 control-label a-label" })@*removed class add-item-lable*@
                    <div class="col-sm-9 col-xs-9">@*removed class col-lg-9, col-md-9, col-xs12*@
                        @Html.DropDownListFor(m => m.ItemType, new SelectList(
                                                                                new List<Object>{
                                                                                     new { value = "product", text = "Product" },
                                                                                     new { value= "service", text = "Service"}
                                                                                }, "value", "text", 2), new { @id = "class-dropdown", @class = "form-control select-box", @placeholder = "Class", @data_toggle = "tooltip", @data_original_title = "Please assign a type to your item." })@*class = removed select-box*@
                    </div>
                </div>
            </div>      
           @* <div class="form-group">
                <div class="input-group">
                    @Html.LabelFor(m => m.ItemType, new { @class = "col-sm-3 control-label a-label" })
                    <div class="form-inline">
                        <label class="radio">
                            @Html.RadioButtonFor(m => m.ItemType, "Product", new { @id = "product", @class = "radio ", @value = "Product", @data_toggle = "tooltip", @data_original_title = "Choose this if the item is a type of \"Product\"" })
                            Product
                        </label>
                        <label class="radio">
                            @Html.RadioButtonFor(m => m.ItemType, "Service", new { @id = "service", @class = "radio", @value = "Service", @data_toggle = "tooltip", @data_original_title = "Choose this if the item is a type of \"Service\"" })
                            Service
                        </label>
                        <div>@Html.ValidationMessageFor(m => m.ItemType)</div>
                    </div>
                </div>
            </div>*@
            <div class="form-group">
                <div class="input-group">
                    @Html.LabelFor(m => m.Name, new { @class = "col-sm-3 control-label a-label" })
                    <div class="col-sm-9">
                        @Html.TextBoxFor(m => m.Name, new { @class = "form-control", @placeholder = "Item Name", @data_toggle = "tooltip", @data_original_title = "Assign a name to this item" })
                        @Html.ValidationMessageFor(m => m.Name)
                    </div>
                </div>
            </div>

            <div class="form-group">
                <div class="input-group">
                    @Html.LabelFor(m => m.Description, new { @class = "col-sm-3 control-label a-label" })
                    <div class="col-sm-9">
                        @Html.TextBoxFor(m => m.Description, new { @class = "form-control", @placeholder = "Item Description", @style = "min-height:30px", @data_toggle = "tooltip", @data_original_title = "Provide an in-depth description of your item. Remember to include the \"per unit\" description. If you offer a dozen eggs, for example, specify that you’re offering \"one dozen\" eggs as opposed to \"one egg\"" })
                        @Html.ValidationMessageFor(m => m.Description)
                    </div>
                </div>
            </div>

            <div class="form-group">
                <div class="input-group">
                    @Html.LabelFor(m => m.Gateway, new { @class = "col-sm-3 control-label a-label" })
                    <div class="col-sm-9">
                        @Html.TextBoxFor(m => m.Gateway, new { @class = "form-control", @placeholder = "Suggested Gateway", @id = "suggested-gateway", @data_toggle = "tooltip", @data_original_title = "Indicate how many NBR are needed for a consumer to own your product or service. NBR should be whole numbers (ex: 1, 5, 15, 100)" })
                        @Html.ValidationMessageFor(m => m.Gateway)
                    </div>
                </div>
            </div>
        
            <div class="form-group text-center">
                <br />
                <div class="row">
                    <div class="form-group">
                        <div class="col-lg-12 col-md-12 col-xs-12" style="text-align:center;">
                            <button class="btn btn-primary" type="submit" value="Submit">Submit</button>
                            @Html.ActionLink("Cancel", "Items", "Account", new {@class = "btn btn-default" })
                        </div>
                    </div>
                </div>
            </div>
       
    }
</div>
<script>
    $(function () {
        $('select').tooltip({ placement: 'bottom' });
        $('input').tooltip({ placement: 'bottom', container: 'body'});
    });
</script>