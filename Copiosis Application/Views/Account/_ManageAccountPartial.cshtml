@model Copiosis_Application.Models.AccountManagerModel
@using System.Collections

<div class="row">
    <div class="col-lg-8 col-lg-offset-2 col-md-8 col-md-offset-2 col-xs-8 col-xs-offset-2">
        <center><h2>Make Changes To Your Account</h2></center>
        <br />
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()
            @*Show Validation Errors if there are any*@
            bool validState = Html.ViewData.ModelState.IsValid;
            if (validState == false)
            {
                <div class="validation-summary-errors panel panel-danger"
                     data-valmsg-summary="true">
                    <div class="panel-heading">
                        @if (@Model.errorList.Count() <= 1) { 
                            <center><strong>Please correct the following field:</strong></center>
                        }
                        else
                        {
                            <center><strong>Please correct the following fields:</strong></center>
                        }
                    </div>
                </div><br />
            }
            else if (ViewBag.StatusMessage != "")
            {
                <div class="panel panel-success"
                     data-valmsg-summary="true">
                    <div class="panel-heading">
                        <center><strong>The changes to your account were successfully saved.</strong></center>
                    </div>
                </div><br />
            }
            @*email*@
            <div class="row">
                <div class="form-group @(Model.errorList.Keys.Contains(Html.IdFor(m => m.emailAddress).ToString()) ? "has-error" : null)">
                    <div class="col-lg-3 col-md-4 col-xs-12">
                        <span class="custom-q-mark glyphicon glyphicon-align-left glyphicon-question-sign" title="This is your e-mail address. Type a new e-mail address to change it"></span>
                        @Html.LabelFor(m => m.emailAddress, new { @class = "control-label manage-account-label" })
                    </div>
                    <div class="col-lg-9 col-md-8 col-xs-12">
                        @Html.TextBoxFor(m => m.emailAddress, new { @class = "form-control", @id = "e-mail", @type = "email", @placeholder = Model.currentEmail })
                        @Html.ValidationMessageFor(m => m.emailAddress)
                    </div>
                </div>
            </div>
            @*first name*@
            <div class="row">
                <div class="form-group @(Model.errorList.Keys.Contains(Html.IdFor(m => m.firstName).ToString()) ? "has-error" : null)">
                    <div class="col-lg-3 col-md-4 col-xs-12">
                        <span class="custom-q-mark glyphicon glyphicon-align-left glyphicon-question-sign" title="This is your first name. Type a new a first name to change it"></span>
                        @Html.LabelFor(m => m.firstName, new { @class = "control-label manage-account-label" })
                    </div>
                    <div class="col-lg-9 col-md-8 col-xs-12">
                        @Html.TextBoxFor(m => m.firstName, new { @class = "form-control", @placeholder = Model.currentFirstName })
                        @Html.ValidationMessageFor(m => m.firstName)
                    </div>
                </div>
            </div>
            @*last name*@
            <div class="row">
                <div class="form-group @(Model.errorList.Keys.Contains(Html.IdFor(m => m.lastName).ToString()) ? "has-error" : null)">
                    <div class="col-lg-3 col-md-4 col-xs-12">
                        <span class="custom-q-mark glyphicon glyphicon-align-left glyphicon-question-sign" title="This is your last name. Type a new last name to change it"></span>
                        @Html.LabelFor(m => m.lastName, new { @class = "control-label manage-account-label" })
                    </div>
                    <div class="col-lg-9 col-md-8 col-xs-12">
                        @Html.TextBoxFor(m => m.lastName, new { @class = "form-control", @placeholder = Model.currentLastName })
                        @Html.ValidationMessageFor(m => m.lastName)
                    </div>
                </div>
            </div>
            @*current password*@
            <div class="row">
                <div class="form-group @(Model.errorList.Keys.Contains(Html.IdFor(m => m.currentPassword).ToString()) ? "has-error" : null)">
                    <div class="col-lg-3 col-md-4 col-xs-12">
                        <span class="custom-q-mark glyphicon glyphicon-align-left glyphicon-question-sign" title="Your current password is requried to save the changes you make"></span>
                        @Html.LabelFor(m => m.currentPassword, new { @class = "control-label manage-account-label" })
                    </div>
                    <div class="col-lg-9 col-md-8 col-xs-12">
                        @Html.PasswordFor(m => m.currentPassword, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.currentPassword)
                    </div>
                </div>
            </div>
            @*new password*@
            <div class="row">
                <div class="form-group @(Model.errorList.Keys.Contains(Html.IdFor(m => m.newPassword).ToString()) ? "has-error" : null)">
                    <div class="col-lg-3 col-md-4 col-xs-12">
                        <span class="custom-q-mark glyphicon glyphicon-align-left glyphicon-question-sign" title="Type a new password to change your current one"></span>
                        @Html.LabelFor(m => m.newPassword, new { @class = "control-label manage-account-label" })
                    </div>
                    <div class="col-lg-9 col-md-8 col-xs-12">
                        @Html.PasswordFor(m => m.newPassword, new { @class = "form-control", @id = "new-pw" })
                        @Html.ValidationMessageFor(m => m.newPassword)
                    </div>
                </div>
            </div>
            @*confirm password*@
            <div class="row">
                <div class="form-group @(Model.errorList.Keys.Contains(Html.IdFor(m => m.confirmPassword).ToString()) ? "has-error" : null)">
                    <div class="col-lg-3 col-md-4 col-xs-12">
                        <span class="custom-q-mark glyphicon glyphicon-align-left glyphicon-question-sign" id="confirm-info" title="Re-type your new password to confirm it is correct"></span>
                        @Html.LabelFor(m => m.confirmPassword, new { @class = "control-label manage-account-label", @id = "confirm-label" })
                    </div>
                    <div class="col-lg-9 col-md-8 col-xs-12">
                        @Html.PasswordFor(m => m.confirmPassword, new { @class = "form-control", @id = "confirm-pw" })
                        @Html.ValidationMessageFor(m => m.confirmPassword)
                    </div>
                </div>
            </div>
            @*Submit button*@
            <div class="form-group">
                <div class="col-lg-12 col-md-12 col-xs-12">
                    <button type="submit" class="btn btn-default center-block">Save Changes</button>
                </div>
            </div>
        }
    </div>
</div>
