@model Copiosis_Application.Models.RegisterModel

@* The RegisterModel will need the other properties for signup (i.e. token, email, etc). Once the RegisterModel
    has that, it is just a matter of adding those inputs to the form below. Note: This could probably be reworked
    to use a true form instead of this ol, as long as the model is populated once the submit happens. *@
<div class="row">
    <div class="col-md-6 col-md-offset-3">
        <h2 id="register-title" class="text-center">New User Registration</h2>
    </div>
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()
            @Html.ValidationSummary()

            <div class="col-md-6 col-md-offset-3">
                <div class="form-group">
                    @Html.LabelFor(m => m.FirstName, new { @class = "sr-only" })
                    @Html.TextBoxFor(m => m.FirstName, new { @class = "form-control", @placeholder = "First Name" })
                    @Html.ValidationMessageFor(m => m.FirstName)
                </div>
            </div>
            <div class="col-md-6 col-md-offset-3">
                <div class="form-group">
                    @Html.LabelFor(m => m.LastName, new { @class = "sr-only" })
                    @Html.TextBoxFor(m => m.LastName, new { @class = "form-control", @placeholder = "Last Name" })
                    @Html.ValidationMessageFor(m => m.LastName)
                </div>
            </div>
            <div class="col-md-6 col-md-offset-3">
                <div class=" form-group">
                    @Html.LabelFor(m => m.Email, new { @class = "sr-only" })
                    @Html.TextBoxFor(m => m.Email, new { @class = "form-control", @placeholder = "E-mail Address" })
                    @Html.ValidationMessageFor(m => m.Email)
                </div>
            </div>
            <div class="col-md-6 col-md-offset-3">
                <div class="form-group">
                    @Html.LabelFor(m => m.UserName, new { @class = "sr-only" })
                    @Html.TextBoxFor(m => m.UserName, new { @class = "form-control", @placeholder = "Username" })
                    @Html.ValidationMessageFor(m => m.UserName)
                </div>

            </div>
            <div class="col-md-6 col-md-offset-3">
                <div class="form-group">
                    @Html.LabelFor(m => m.Password, new { @class = "sr-only" })
                    @Html.TextBoxFor(m => m.Password, new { @class = "form-control", @placeholder = "Password" })
                    @Html.ValidationMessageFor(m => m.Password)
                </div>
            </div>
            <div class="col-md-6 col-md-offset-3">
                <div class="form-group">
                    @Html.LabelFor(m => m.ConfirmPassword, new { @class = "sr-only" })
                    @Html.TextBoxFor(m => m.ConfirmPassword, new { @class = "form-control", @placeholder = "Confirm Password" })
                    @Html.ValidationMessageFor(m => m.ConfirmPassword)
                </div>
            </div>
            <div class="col-md-6 col-md-offset-3">
                <div class="form-group">
                    @Html.LabelFor(m => m.Token, new { @class = "sr-only" })
                    @Html.TextBoxFor(m => m.Token, new { @class = "form-control", @placeholder = "Token" })
                    @Html.ValidationMessageFor(m => m.Token)
                </div>
            </div>
            <div class="col-md-6 col-md-offset-3" style="text-align:center;">
                <input type="submit" value="Register" />
            </div>

        }
    </div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
